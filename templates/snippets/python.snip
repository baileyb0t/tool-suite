snippet header
    #!/usr/bin/env python3
    # vim: set ts=4 sts=0 sw=4 si fenc=utf-8 et:
    # vim: set fdm=marker fmr={{{,}}} fdl=0 foldcolumn=4:
    # Authors:     BP
    # Maintainers: BP
    # Copyright:   2024, HRDAG, GPL v2 or later
    # =========================================

snippet dependencies-tag
    # ---- dependencies {{{
    #}}}

snippet import-basic
    from pathlib import Path
    from sys import stdout
    import argparse
    from loguru import logger
    import pandas as pd

snippet getfiles-deps
    from pathlib import Path, PosixPath
    from os.path import isfile, isdir

snippet support-methods-tag
    # --- support methods --- {{{
    # }}}

snippet getargs
    def getargs():
        parser = argparse.ArgumentParser()
        parser.add_argument("--input", default=None)
        parser.add_argument("--output", default=None)
        args = parser.parse_args()
        assert Path(args.input).exists()
        return args

snippet setuplogging
    def setuplogging(logfile):
        logger.add(logfile,
                   colorize=True,
                   format="<green>{time:YYYY-MM-DD⋅at⋅HH:mm:ss}</green>⋅<level>{message}</level>",
                   level="INFO")
        return 1

snippet readyaml
    def readyaml(yamlfile):
        with open(yamlfile, 'r') as f:
            data = yaml.safe_load(f)
            f.close()
        return data

snippet writeyaml
    def writeyaml(yamlfile, data):
        with open(yamlfile, 'w') as f:
            yaml.dump(data, f, default_flow_style=False)
            f.close()
        print(f'{yamlfile} written successfully')
        return 1

snippet gitroot
    def gitroot():
        top = subprocess.Popen(['git', 'rev-parse', '--show-toplevel'],
                               stdout = subprocess.PIPE,
                               stderr = subprocess.PIPE)
        return top.communicate()[0].decode('utf-8').strip()

snippet getfiles
    def getfiles(arg, fext='parquet'):
        assert isdir(arg)
        return [path for path in Path(arg).rglob(f'*.{fext}')]

snippet main-tag
    # --- main --- {{{
    # }}}

snippet main
    if __name__ == '__main__':

snippet main-basic
    args = getargs()
    setuplogging("output/script.log")
    logger.info('done')
